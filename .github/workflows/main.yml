name: Angular Workflow

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    defaults:
      run:
        working-directory: ./travis-demo

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: View PWD
        run: |
        ls -al
        pwd
        
      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./travis-demo
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          file: ./Dockerfile-test

  docker-test:
      runs-on: ubuntu-latest
      name: Analyze Dockerized Angular Project 
      defaults:
        run:
          working-directory: ./travis-demo
      steps:
      - uses: actions/checkout@v1
      - name: Cache node modules
        uses: actions/cache@v1
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Build Docker Image
        run: docker build -f Dockerfile-test --tag job .

      - name: Start Docker Container
        run: docker run -t -d --name="test-container" job
        
      - name: Lint Angular Project
        run: docker exec test-container ng lint

      - name: Run Angular Unit Tests
        run: docker exec test-container ng test --watch=false

      - name: Copy Coverage Report to Host
        run: |
          docker cp test-container:/app/coverage/travis-demo/lcov.info ..
          pwd
          cat ../lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          files: ./lcov.info
          verbose: true

      # - name: Push Build to Release
      #   uses: ncipollo/release-action@v1
      #   with:
      #     artifacts: "dist/angular-githubaction/*"
      #     token: ${{ secrets.CICD }}
